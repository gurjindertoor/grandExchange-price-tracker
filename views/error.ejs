<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/public/assets/error.css">
    <title>GrandExchange Tracker</title>
    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
</head>

<body class="bg">
    <div class="overlay" id="overlay" onclick="resetBg()">
        <!-- Overlay  -->
    </div>
    <!-- Container -->
    <div class="container">
        <nav class="navbar navbar-expand-lg navbar-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="/">GrandExchange Tracker</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                    data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    </ul>

                    <!-- Right Navbar  -->
                    <ul class="navbar-nav navbar-right mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link text-light" href="/items">Items</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/faqs">FAQs</a>
                        </li>
                        <li class="nav-item">
                            <form class="d-flex" role="search" action="/search" method="GET">
                                <input class="form-control me-2" type="search" placeholder="Search item" name="itemName"
                                    autocomplete="off" id="search" aria-label="Search">
                                <span class="input-group-btn">
                                    <button class="btn btn-outline-success" type="submit">Search</button>
                                </span>
                            </form>
                            <div style=" width: 100%; max-height: 200px; overflow-y: scroll; display: block; background:
                                #fff; position: absolute; z-index: 10; ">
                                <div id="match-list"></div>
                            </div>

                        </li>
                    </ul>
                    <!-- End of Right Navbar  -->
                </div>
            </div>
        </nav>
        <!-- Search Box  -->
        <!-- End of Search Box  -->
    </div>

    <div>
        <h1 class="error-msg">Error, page not found.</h1>
    </div>
    <!-- /End of Container -->
    <!-- JavaScript Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3"
        crossorigin="anonymous"></script>

    <script type="text/javascript">
        function setBgToDark() {
            document.getElementById('overlay').style.opacity = "0.7";
        }

        function resetBg() {
            document.getElementById('overlay').style.opacity = "0.2";
        }
    </script>

    <script>

        const search = document.getElementById('search');
        const matchList = document.getElementById('match-list');

        const searchItems = async (searchText) => {
            const res = await fetch('public/items.json');
            const items = await res.json();

            // Get matches to current text input
            let matches = items.filter(item => {
                const regex = new RegExp(`^${searchText}`, 'gi');
                return item.name.match(regex);

            })

            if (searchText.length === 0) {
                matches = [];
                matchList.innerHTML = '';
            }

            outputHtml(matches);
        }

        // Show result in HTML
        const outputHtml = matches => {
            if (matches.length > 0) {

                const html = matches.map(match =>
                    `<div>
        <h6><a href="/search?itemName=${match.name}">${match.name}</a></h6></div>
        `
                ).join('');


                matchList.innerHTML = html;

            }
        }



        search.addEventListener('input', () => searchItems(search.value));


    </script>
</body>

</html>